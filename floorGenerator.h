#ifndef FLOOR_GENERATOR_H
#define FLOOR_GENERATOR_H
#include "floor.h"
#include "spawnRule.h"
#include <vector>
#include <map>
#include <fstream>
#include <string>
#include <iostream>
using namespace std;

// Class that randomly generates a Floor that contains 2D array of GameObjects
// the PlayerCharacter object won't appear on the Floor, but you can access its location through getPlayerLoc()
class FloorGenerator {
    const size_t ROWNUM = 25;
    const size_t COLNUM = 79;
    int chamberNum = 0;
    bool spawnEntity = true;    // will any entities be spawned
    string mapFile = "emptyfloor.txt";    // allows to have customized floor settings
    ifstream fileIn;    // file stream for mapFile
    vector<vector<ObjectName>> landscapeTemplate;    // empty floor containing only the cells except for stair. Get from landscapeFile
    vector<vector<ObjectName>> spawnTemplate;    // floor containing everything that landscapeTemplate doesn't
    vector<vector<int>> chamberMap;    // shows which chamber each cell belong to (1, 2, ..., n. 0 means not in any chamber)


    public:
        FloorGenerator();    // create floor generator with default settings
        FloorGenerator(string mapFile, bool spawnEntity);    // create floor with given layout (can choose to also spawn entities)
        Floor *generateFloor();    // returns the pointer to Floor object generated by floor generator (generate all gameobject excluding player)
        vector<int> getPlayerLoc();    // return (x, y) representing coordinate that player should be on floor
};

#endif
